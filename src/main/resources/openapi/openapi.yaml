openapi: 3.0.3
info:
  title: Estore- OpenAPI 3.0
  description: |-
    This is an electronics store based on the OpenAPI 3.0 specification.
  version: 1.0.0

tags:
  - name: product
    description: Product management
  - name: basket
    description: To and and remove products from basket and generate receipt
paths:
  /product:
    post:
      tags:
        - product
      summary: Add a new product to the store
      description: Add a new product to the store
      operationId: addProduct
      requestBody:
        description: Create a new product in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDto'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDto'
        '405':
          description: Invalid input
      security:
        - basic_auth:
            - write:products
            - read:products
    put:
      tags:
        - product
      summary: Update an existing product
      description: Update an existing product by Id
      operationId: updateProduct
      requestBody:
        description: Update an existent product in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDto'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDto'
        '400':
          description: Invalid ID supplied
        '404':
          description: Product not found
        '405':
          description: Validation exception
  /product/{productId}:
    get:
      tags:
        - product
      summary: Find product by ID
      description: Returns a single product
      operationId: getProductById
      parameters:
        - name: productId
          in: path
          description: ID of product to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDto'
        '400':
          description: Invalid ID supplied
        '404':
          description: Product not found
      security:
        - basic_auth:
            - write:products
            - read:products
    delete:
      tags:
        - product
      summary: Deletes a product
      description: delete a product
      operationId: deleteProduct
      parameters:
        - name: productId
          in: path
          description: Product id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid product value
      security:
        - basic_auth:
            - write:products
            - read:products
  /basket:
    post:
      tags:
        - basket
      summary: Add a product to basket
      description: Add a product to basket
      operationId: addToBasket
      requestBody:
        description: Product with quantity
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BasketItemDto'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasketItemDto'
        '405':
          description: Invalid input
      security:
        - basic_auth:
            - write:baskets
            - read:baskets
    get:
      tags:
        - basket
      summary: Find basket items by user name
      description: Returns a list of item in basket
      operationId: getBasket
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BasketItemDto'
        '400':
          description: Invalid user name supplied
        '404':
          description: No item found
      security:
        - basic_auth:
            - write:baskets
            - read:baskets
  /basket/{id}:
    delete:
      tags:
        - basket
      summary: Deletes a basket item by id
      description: delete a basket item by id
      operationId: deleteBasketItem
      parameters:
        - name: id
          in: path
          description: Basket item id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid user name value
      security:
        - basic_auth:
            - write:baskets
            - read:baskets
  /basket/checkout:
    get:
      tags:
        - basket
      summary: Generate receipt according to items in basket
      description: Return receipt including all items, discounts applied and total price
      operationId: checkout
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReceiptDto'
        '400':
          description: Invalid user name supplied
        '404':
          description: No item found
      security:
        - basic_auth:
            - write:baskets
            - read:baskets
components:
  schemas:
    ProductDto:
      required:
        - id
        - name
        - price
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: Samsung 32 inches monitor
        category:
          type: string
          example: monitor
        stock:
          type: integer
          format: int32
          example: 89
        price:
          type: number
          example: 399.9
        discounts:
          type: array
          items:
            type: string
            example: BUY_1_50%_OFF_THE_SECOND
    BasketItemDto:
      required:
        - id
        - username
        - product
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 5
        username:
          type: string
          example: testuser
        product:
          $ref: '#/components/schemas/ProductDto'
        quantity:
          type: integer
          format: int32
          example: 2
    ReceiptDto:
      required:
        - username
      type: object
      properties:
        username:
          type: string
          example: testuser
        purchases:
          type: array
          items:
            $ref: '#/components/schemas/PurchaseDto'
        totalPrice:
          type: number
          example: 599.85
    PurchaseDto:
      required:
        - product
        - quantity
      type: object
      properties:
        product:
          $ref: '#/components/schemas/ProductDto'
        quantity:
          type: integer
          format: int32
          example: 2
        originalTotalPrice:
          type: number
          example: 799.8
        discountedTotalPrice:
          type: number
          example: 599.85

  securitySchemes:
    basic_auth:
      type: http
      scheme: basic